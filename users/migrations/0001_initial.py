# Generated by Django 3.1.2 on 2020-10-30 13:28

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_index=True, max_length=128, unique=True)),
                ('phone', models.BigIntegerField(unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('is_star', models.BooleanField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('register', models.CharField(blank=True, default=True, max_length=32)),
            ],
            options={
                'verbose_name': 'BaseUser',
                'verbose_name_plural': 'BaseUsers',
            },
        ),
        migrations.CreateModel(
            name='Avatars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128, unique=True)),
                ('image', models.ImageField(upload_to=users.models.nameFile)),
            ],
            options={
                'verbose_name': 'avatar',
                'verbose_name_plural': 'avatars',
            },
        ),
        migrations.CreateModel(
            name='CatPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=128, unique=True)),
                ('image', models.FileField(upload_to=users.models.nameCat)),
            ],
        ),
        migrations.CreateModel(
            name='Congratulations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star_id', models.IntegerField(unique=True)),
                ('video_con', models.FileField(upload_to=users.models.congratulationFile)),
                ('order_id', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name': 'congritulation',
                'verbose_name_plural': 'congritulations',
            },
        ),
        migrations.CreateModel(
            name='MessageChats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.IntegerField()),
                ('from_user', models.IntegerField()),
                ('message_id', models.IntegerField()),
                ('message', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128, unique=True)),
                ('video_hi', models.FileField(upload_to=users.models.nameVideoFile)),
            ],
            options={
                'verbose_name': 'video',
                'verbose_name_plural': 'videos',
            },
        ),
        migrations.CreateModel(
            name='VkUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_vk', models.BigIntegerField(unique=True)),
                ('access_token', models.CharField(max_length=256)),
                ('refresh_token', models.CharField(max_length=256)),
                ('expires_in', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='YandexUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_yandex', models.BigIntegerField(unique=True)),
                ('access_token', models.CharField(max_length=256)),
                ('refresh_token', models.CharField(max_length=256)),
                ('expires_in', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('users_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.users')),
                ('date_of_birth', models.DateField()),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
            bases=('users.users',),
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star_id', models.IntegerField()),
                ('cust_id', models.IntegerField()),
                ('like', models.BooleanField(default=1)),
            ],
            options={
                'unique_together': {('star_id', 'cust_id')},
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_name', models.CharField(db_index=True, max_length=128, unique=True)),
                ('cat_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.catphoto')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.AddField(
            model_name='users',
            name='avatar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.avatars'),
        ),
        migrations.AddField(
            model_name='users',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='users',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Stars',
            fields=[
                ('users_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.users')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('rating', models.IntegerField()),
                ('days', models.CharField(default='0', max_length=8)),
                ('profession', models.CharField(max_length=32)),
                ('description', models.TextField(max_length=2048)),
                ('cat_name_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.categories')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('video_hi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.videos')),
            ],
            options={
                'verbose_name': 'Star',
                'verbose_name_plural': 'Stars',
            },
            bases=('users.users',),
        ),
        migrations.CreateModel(
            name='Ratings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('adresant', models.IntegerField(default=None)),
                ('adresat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.customers')),
            ],
            options={
                'verbose_name': 'rating',
                'verbose_name_plural': 'ratings',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(blank=True, default='', max_length=128)),
                ('order_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('ordering_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('by_date', models.DateField(default=None)),
                ('by_time', models.TimeField(default='13:28')),
                ('for_whom', models.CharField(max_length=128)),
                ('comment', models.TextField()),
                ('status_order', models.IntegerField(default=0)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.customers')),
                ('star_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.stars')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
    ]
